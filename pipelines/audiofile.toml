[config.input]
type = "File"

[config.output]
type = "DataSet"
class = "AudioFile"
attr."album" = "text"
attr."artist" = "text"
attr."albumartist" = "text"
attr."tracknumber" = "text"
attr."year" = "text"
attr."genre" = "text"
attr."ISRC" = "text"
attr."lyrics" = "text"
attr."audio_data" = "binary"

[config.output_map]
"album" = { node = "tags", output = "Album" }
"artist" = { node = "tags", output = "Artist" }
"albumartist" = { node = "tags", output = "AlbumArtist" }
"tracknumber" = { node = "tags", output = "TrackNumber" }
"year" = { node = "tags", output = "Year" }
"genre" = { node = "tags", output = "Genre" }
"ISRC" = { node = "tags", output = "ISRC" }
"lyrics" = { node = "if_none", output = "out" }
"audio_data" = { node = "strip", output = "out" }


[node."tags"]
node.type = "ExtractTags"
node.tags = [
	"Album",
	"Artist",
	"AlbumArtist",
	"TrackNumber",
	"Year",
	"Genre",
	"ISRC",
	"Lyrics",
]
input.data = { "pipeline" = "data" }

#[node."getcover"]
#type = "CoverExtract"
#input.data = "fs.data"

[node.if_none]
node.type = "IfNone"
input.data = { node = "tags", output = "Lyrics" }
#input.data = "if_none.out"
input.ifnone = { "text" = "Unknown Lyrics" }

[node.strip]
node.type = "StripTags"
input.data = { pipeline = "data" }
after = ["if_none"]

[node."covers"]
node.type = "ExtractCovers"
input.data = { "pipeline" = "data" }

[node."add_cover"]
node.type = "Pipeline"
node.pipeline = "cover"
input.data = { "pipeline" = "data" }
