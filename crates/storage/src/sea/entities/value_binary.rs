//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "value_binary")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	#[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
	pub value: Vec<u8>,
	pub attr: i32,
	pub item: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::attr::Entity",
		from = "Column::Attr",
		to = "super::attr::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Attr,
	#[sea_orm(
		belongs_to = "super::item::Entity",
		from = "Column::Item",
		to = "super::item::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Item,
}

impl Related<super::attr::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Attr.def()
	}
}

impl Related<super::item::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Item.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
