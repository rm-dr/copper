/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/login": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Try to log in */
		post: operations["try_login"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/logout": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Terminate this session */
		post: operations["logout"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Create a new User */
		post: operations["add_user"];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user/me": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get logged in user info */
		get: operations["get_me"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user/{user_id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		/** Delete a User */
		delete: operations["del_user"];
		options?: never;
		head?: never;
		/** Update a user */
		patch: operations["update_user"];
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		LoginRequest: {
			email: string;
			password: string;
		};
		NewUserRequest: {
			email: string;
			name: string;
			password: string;
		};
		UpdateUserRequest: {
			new_email?: string | null;
			new_name?: string | null;
			new_password?: string | null;
		};
		/** @description User Information */
		UserInfo: {
			/** @description This user's email */
			email: string;
			/**
			 * Format: int32
			 * @description The id of this dataset
			 */
			id: number;
			/** @description This user's name */
			name: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	try_login: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				"application/json": components["schemas"]["LoginRequest"];
			};
		};
		responses: {
			/** @description Successfully logged in */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"text/plain": string;
				};
			};
			/** @description Could not log in */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"text/plain": string;
				};
			};
		};
	};
	logout: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Successfully terminated session */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Could not log out */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"text/plain": string;
				};
			};
		};
	};
	add_user: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody: {
			content: {
				"application/json": components["schemas"]["NewUserRequest"];
			};
		};
		responses: {
			/** @description User created successfully */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Bad request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"text/plain": string;
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	get_me: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Logged in user info */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["UserInfo"];
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	del_user: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				/** @description User id */
				user_id: number;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description User deleted successfully */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	update_user: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				/** @description User id */
				user_id: number;
			};
			cookie?: never;
		};
		requestBody: {
			content: {
				"application/json": components["schemas"]["UpdateUserRequest"];
			};
		};
		responses: {
			/** @description User updated successfully */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Invalid request */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"text/plain": string;
				};
			};
			/** @description Unauthorized */
			401: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Internal server error */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
}
